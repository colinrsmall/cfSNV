#!/bin/bash
#$ -S /bin/bash
#$ -cwd
#$ -j y
#$ -m bea
#$ -o log.$JOB_ID.log
#$ -M colinrsmall@yahoo.com
#$ -l  h_data=2G,h_vmem=12G
#$ -t 1-1:1

. /u/local/Modules/default/init/modules.sh
module load samtools
module load gcc/7.2.0
module load anaconda/python2-4.2

### LIST OF INPUT FILES
input_file=/u/home/c/colinrsm/cfSNV/demo/input_list_iterate.txt

###### PREREQUISITE PACKAGES ######
###### Please change these paths
### PATH TO SAMTOOLS (ABSOLUTE PATH TO EXECUTABLE FILE)
samtools=/u/local/apps/samtools/1.9/bin/samtools

### PATH TO PYTHON (ABSOLUTE PATH TO EXECUTABLE FILE)
python=/u/local/apps/anaconda/python2-4.2.0/bin/python

### PATH TO cfSNV SOURCE CODES (ABSOLUTE PATH TO THE FOLDER CONTAINING SOURCE CODES)
cfSNV=/u/home/c/colinrsm/cfSNV/src


###### MAIN COMMANDS

### READ PARAMETERS FROM LIST OF INPUT FILES
read path sample_id SNP_database <<< "`head -$SGE_TASK_ID ${input_file} | tail -1`"

tmp_dir=${path}/tmp
depth_dir=${tmp_dir}/depth
input_dir=${tmp_dir}/rebase
output_dir=${tmp_dir}/variant
filter_dir=${tmp_dir}/filter
estimate_dir=${tmp_dir}/estimate
pileup_dir=${tmp_dir}/pileup

if [ ! -d "$output_dir" ]; then
        mkdir $output_dir
fi

if [ ! -d "$filter_dir" ]; then
	mkdir $filter_dir
fi

if [ ! -d "$estimate_dir" ]; then
	mkdir $estimate_dir
fi



### MERGING PARALLEL OUTPUTS FROM DATA PREPROCESSING
if [ ! -f ${input_dir}/${sample_id}.indel ]; then
	cat ${input_dir}/${sample_id}_*.indel > ${input_dir}/${sample_id}.indel
fi

if [ ! -f  ${input_dir}/${sample_id}.rebase ]; then
	cat ${input_dir}/${sample_id}_*.rebase > ${input_dir}/${sample_id}.rebase
fi

rm ${input_dir}/${sample_id}_*.indel ${input_dir}/${sample_id}_*.rebase ${pileup_dir}/${sample_id}_*.pileup


### COLLECTING REGIONS AFFECTED BY INDELS
${python} ${cfSNV}/py14.collect_indel_related_regions.py ${input_dir}/${sample_id}.indel ${input_dir}/${sample_id}.filter_indel.bed

read depth < ${depth_dir}/${sample_id}.depth.txt

threshold=1.0000

while true; do

### MUTATION CLUSTER FREQUENCY ESTIMATION
echo ${input_dir}/${sample_id}.rebase ${threshold} ${sample_id} ${depth} ${estimate_dir}/${sample_id}.${threshold}.C_merged_normal.HOTSPOT.VAF ${estimate_dir}/${sample_id}.${threshold}.C_merged_normal.estimate
${python} ${cfSNV}/py2.estimate.TFestimate.py ${input_dir}/${sample_id}.rebase ${threshold} ${sample_id} ${depth} ${estimate_dir}/${sample_id}.${threshold}.C_merged_normal.HOTSPOT.VAF ${estimate_dir}/${sample_id}.${threshold}.C_merged_normal.estimate


read estimate < ${estimate_dir}/${sample_id}.${threshold}.C_merged_normal.estimate

### CANDIDATE DETECTION AT THE CURRENT FREQUENCY
${python} ${cfSNV}/py3.genotype.genotype.py ${input_dir}/${sample_id}.rebase ${output_dir}/${sample_id}.${threshold}.variant ${estimate} ${threshold} ${depth}

### SITE-LEVEL FILTRATION
${python} ${cfSNV}/py4.filter.filter_with_pileup.py  ${output_dir}/${sample_id}.${threshold}.variant ${filter_dir}/${sample_id}.${threshold}.intermediate ${filter_dir}/${sample_id}.${threshold}.pass ${filter_dir}/${sample_id}.${threshold}.hold ${filter_dir}/${sample_id}.${threshold}.record ${estimate_dir}/${sample_id}.${threshold}.jenks_estimate ${threshold} ${SNP_database} ${depth}

read n_pass_hold jenk_estimate threshold others < ${estimate_dir}/${sample_id}.${threshold}.jenks_estimate

if (("$n_pass_hold" == "0")); then
break
fi

if [ "$threshold" = "0.0000" ]; then
break
fi

done

echo ${SECONDS}





